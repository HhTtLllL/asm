
分配公共符号
公共符号            大小              文件

thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
user_pool           0x10              build/memory.o
intr_name           0x84              build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
idt_table           0x84              build/interrupt.o
kernel_pool         0x10              build/memory.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o
 .group         0x0000000000000000        0x8 build/console.o
 .group         0x0000000000000000        0x8 build/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/console.o
 .group         0x0000000000000000        0x8 build/sync.o
 .group         0x0000000000000000        0x8 build/sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/sync.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

节 .text 的地址设置到 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/string.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/console.o
LOAD build/sync.o
                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got        0x0000000008048098        0x0
 *(.plt.got)
 .plt.got       0x0000000008048098        0x0 build/main.o

.text           0x00000000c0001500     0x2935
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0xd8 build/main.o
                0x00000000c0001500                main
                0x00000000c0001588                k_thread_a
                0x00000000c00015b0                k_thread_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00015d8        0x4 build/main.o
                0x00000000c00015d8                __x86.get_pc_thunk.bx
 .text          0x00000000c00015dc       0x43 build/init.o
                0x00000000c00015dc                init_all
 .text          0x00000000c000161f      0x556 build/interrupt.o
                0x00000000c0001a10                intr_enable
                0x00000000c0001a43                intr_disable
                0x00000000c0001a76                intr_set_status
                0x00000000c0001a9e                intr_get_status
                0x00000000c0001acc                register_handler
                0x00000000c0001af5                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001b75        0x4 build/interrupt.o
                0x00000000c0001b75                __x86.get_pc_thunk.ax
 .text          0x00000000c0001b79      0x1b2 build/timer.o
                0x00000000c0001cc3                timer_init
 *fill*         0x00000000c0001d2b        0x5 
 .text          0x00000000c0001d30      0x393 build/kernel.o
                0x00000000c0001d30                intr_exit
 *fill*         0x00000000c00020c3        0xd 
 .text          0x00000000c00020d0      0x172 build/print.o
                0x00000000c00020d0                put_str
                0x00000000c00020ee                put_char
                0x00000000c00021bb                put_int
                0x00000000c000221e                set_cursor
 .text          0x00000000c0002242       0xf4 build/debug.o
                0x00000000c0002242                panic_spin
 .text          0x00000000c0002336      0x484 build/string.o
                0x00000000c0002336                memset
                0x00000000c0002373                memcpy
                0x00000000c00023e9                memcmp
                0x00000000c0002482                strcpy
                0x00000000c00024ed                strlen
                0x00000000c000254e                strcmp
                0x00000000c00025dd                strchr
                0x00000000c000264b                strrchr
                0x00000000c00026bf                strcat
                0x00000000c000273f                strchrs
 .text          0x00000000c00027ba      0x654 build/memory.o
                0x00000000c0002853                pte_ptr
                0x00000000c000288d                pde_ptr
                0x00000000c0002a54                malloc_page
                0x00000000c0002b2d                get_kernel_pages
                0x00000000c0002dba                mem_init
 .text          0x00000000c0002e0e      0x290 build/bitmap.o
                0x00000000c0002e0e                bitmap_init
                0x00000000c0002e41                bitmap_scan_test
                0x00000000c0002e90                bitmap_scan
                0x00000000c0002fdb                bitmap_set
 .text          0x00000000c000309e      0x66b build/thread.o
                0x00000000c000309e                running_thread
                0x00000000c00030e9                thread_create
                0x00000000c000316d                init_thread
                0x00000000c0003212                thread_start
                0x00000000c00033bd                schedule
                0x00000000c0003508                thread_block
                0x00000000c0003580                thread_unblock
                0x00000000c00036a4                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003709        0x4 build/thread.o
                0x00000000c0003709                __x86.get_pc_thunk.dx
 .text          0x00000000c000370d      0x25c build/list.o
                0x00000000c000370d                list_init
                0x00000000c0003745                list_insert_before
                0x00000000c0003799                list_push
                0x00000000c00037c1                list_append
                0x00000000c00037e9                list_remove
                0x00000000c0003832                list_pop
                0x00000000c000385e                elem_find
                0x00000000c00038a3                list_traversal
                0x00000000c000390a                list_len
                0x00000000c0003949                list_empty
 *fill*         0x00000000c0003969        0x7 
 .text          0x00000000c0003970       0x15 build/switch.o
                0x00000000c0003970                switch_to
 .text          0x00000000c0003985      0x119 build/console.o
                0x00000000c0003985                console_init
                0x00000000c00039b0                console_acquire
                0x00000000c00039db                console_release
                0x00000000c0003a06                console_put_str
                0x00000000c0003a36                console_put_char
                0x00000000c0003a6e                console_put_int
 .text          0x00000000c0003a9e      0x397 build/sync.o
                0x00000000c0003a9e                sema_init
                0x00000000c0003ad8                lock_init
                0x00000000c0003b12                sema_down
                0x00000000c0003c31                sema_up
                0x00000000c0003cfe                lock_acquire
                0x00000000c0003d86                lock_release
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x00000000c0003e38      0x9f1
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0003e38       0x34 build/main.o
 .rodata        0x00000000c0003e6c        0xa build/init.o
 *fill*         0x00000000c0003e76        0x2 
 .rodata        0x00000000c0003e78      0x2c1 build/interrupt.o
 *fill*         0x00000000c0004139        0x3 
 .rodata        0x00000000c000413c       0x6b build/timer.o
 .rodata        0x00000000c00041a7       0x38 build/debug.o
 *fill*         0x00000000c00041df        0x1 
 .rodata        0x00000000c00041e0       0xac build/string.o
 .rodata        0x00000000c000428c      0x128 build/memory.o
 .rodata        0x00000000c00043b4       0x6b build/bitmap.o
 *fill*         0x00000000c000441f        0x1 
 .rodata        0x00000000c0004420      0x2d3 build/thread.o
 *fill*         0x00000000c00046f3        0x1 
 .rodata        0x00000000c00046f4      0x135 build/sync.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000482c      0xab4
 *(.eh_frame)
 .eh_frame      0x00000000c000482c       0x8c build/main.o
 .eh_frame      0x00000000c00048b8        0x0 build/main.o
 .eh_frame      0x00000000c00048b8       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c00048dc      0x1b4 build/interrupt.o
                                        0x1e0 (松开之前的大小)
 .eh_frame      0x00000000c0004a90       0x90 build/timer.o
                                         0xd0 (松开之前的大小)
 .eh_frame      0x00000000c0004b20       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0004b3c      0x164 build/string.o
                                        0x190 (松开之前的大小)
 .eh_frame      0x00000000c0004ca0      0x13c build/memory.o
                                        0x17c (松开之前的大小)
 .eh_frame      0x00000000c0004ddc       0x94 build/bitmap.o
                                         0xc0 (松开之前的大小)
 .eh_frame      0x00000000c0004e70      0x174 build/thread.o
                                        0x1b4 (松开之前的大小)
 .eh_frame      0x00000000c0004fe4      0x148 build/list.o
                                        0x188 (松开之前的大小)
 .eh_frame      0x00000000c000512c       0xd8 build/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0005204       0xdc build/sync.o
                                        0x11c (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0007000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0007000        0x0
 *(.got)
 .got           0x00000000c0007000        0x0 build/main.o
 *(.igot)
                0x00000000c0007ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0007000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0007000        0xc build/main.o
                0x00000000c0007000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)

.data           0x00000000c000700c       0x8c
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000700c        0x0 build/main.o
 .data          0x00000000c000700c        0x0 build/init.o
 .data          0x00000000c000700c        0x0 build/interrupt.o
 .data          0x00000000c000700c        0x0 build/timer.o
 .data          0x00000000c000700c       0x84 build/kernel.o
                0x00000000c000700c                intr_entry_table
 .data          0x00000000c0007090        0x8 build/print.o
 .data          0x00000000c0007098        0x0 build/debug.o
 .data          0x00000000c0007098        0x0 build/string.o
 .data          0x00000000c0007098        0x0 build/memory.o
 .data          0x00000000c0007098        0x0 build/bitmap.o
 .data          0x00000000c0007098        0x0 build/thread.o
 .data          0x00000000c0007098        0x0 build/list.o
 .data          0x00000000c0007098        0x0 build/console.o
 .data          0x00000000c0007098        0x0 build/sync.o

.data1
 *(.data1)
                0x00000000c0007098                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000c0007098                . = .
                0x00000000c0007098                __bss_start = .

.bss            0x00000000c00070a0      0x2b8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c00070a0        0x0 build/main.o
 .bss           0x00000000c00070a0        0x0 build/init.o
 .bss           0x00000000c00070a0      0x108 build/interrupt.o
 .bss           0x00000000c00071a8        0x0 build/timer.o
 .bss           0x00000000c00071a8        0x0 build/debug.o
 .bss           0x00000000c00071a8        0x0 build/string.o
 .bss           0x00000000c00071a8        0x0 build/memory.o
 .bss           0x00000000c00071a8        0x0 build/bitmap.o
 .bss           0x00000000c00071a8        0x4 build/thread.o
 .bss           0x00000000c00071ac        0x0 build/list.o
 .bss           0x00000000c00071ac       0x1c build/console.o
 .bss           0x00000000c00071c8        0x0 build/sync.o
 *(COMMON)
 *fill*         0x00000000c00071c8       0x18 
 COMMON         0x00000000c00071e0      0x124 build/interrupt.o
                0x00000000c00071e0                intr_name
                0x00000000c0007280                idt_table
 COMMON         0x00000000c0007304        0x4 build/timer.o
                0x00000000c0007304                ticks
 COMMON         0x00000000c0007308       0x2c build/memory.o
                0x00000000c0007308                user_pool
                0x00000000c0007318                kernel_vaddr
                0x00000000c0007324                kernel_pool
 COMMON         0x00000000c0007334       0x24 build/thread.o
                0x00000000c0007334                thread_ready_list
                0x00000000c0007344                thread_all_list
                0x00000000c0007354                main_thread
                0x00000000c0007358                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0007358                . = ALIGN (0x4)
                0x00000000c0007358                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0007358                . = ALIGN (0x4)
                0x00000000c0007358                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000c0007358                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2d
 *(.comment)
 .comment       0x0000000000000000       0x2d build/main.o
                                         0x2e (松开之前的大小)
 .comment       0x000000000000002d       0x2e build/init.o
 .comment       0x000000000000002d       0x2e build/interrupt.o
 .comment       0x000000000000002d       0x2e build/timer.o
 .comment       0x000000000000002d       0x2e build/debug.o
 .comment       0x000000000000002d       0x2e build/string.o
 .comment       0x000000000000002d       0x2e build/memory.o
 .comment       0x000000000000002d       0x2e build/bitmap.o
 .comment       0x000000000000002d       0x2e build/thread.o
 .comment       0x000000000000002d       0x2e build/list.o
 .comment       0x000000000000002d       0x2e build/console.o
 .comment       0x000000000000002d       0x2e build/sync.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
