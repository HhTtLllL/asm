
分配公共符号
公共符号            大小              文件

kbd_buf             0x6c              build/keyboard.o
thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
user_pool           0x10              build/memory.o
intr_name           0xc0              build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
idt_table           0xc0              build/interrupt.o
kernel_pool         0x10              build/memory.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o
 .group         0x0000000000000000        0x8 build/console.o
 .group         0x0000000000000000        0x8 build/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/console.o
 .group         0x0000000000000000        0x8 build/sync.o
 .group         0x0000000000000000        0x8 build/sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/sync.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/keyboard.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/ioqueue.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

节 .text 的地址设置到 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/string.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/console.o
LOAD build/sync.o
LOAD build/keyboard.o
LOAD build/ioqueue.o
                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got        0x0000000008048098        0x0
 *(.plt.got)
 .plt.got       0x0000000008048098        0x0 build/main.o

.text           0x00000000c0001500     0x321f
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x162 build/main.o
                0x00000000c0001500                main
                0x00000000c0001576                k_thread_a
                0x00000000c00015ec                k_thread_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c0001662        0x4 build/main.o
                0x00000000c0001662                __x86.get_pc_thunk.bx
 .text          0x00000000c0001666       0x48 build/init.o
                0x00000000c0001666                init_all
 .text          0x00000000c00016ae      0x556 build/interrupt.o
                0x00000000c0001a9f                intr_enable
                0x00000000c0001ad2                intr_disable
                0x00000000c0001b05                intr_set_status
                0x00000000c0001b2d                intr_get_status
                0x00000000c0001b5b                register_handler
                0x00000000c0001b84                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001c04        0x4 build/interrupt.o
                0x00000000c0001c04                __x86.get_pc_thunk.ax
 .text          0x00000000c0001c08      0x1b2 build/timer.o
                0x00000000c0001d52                timer_init
 *fill*         0x00000000c0001dba        0x6 
 .text          0x00000000c0001dc0      0x537 build/kernel.o
                0x00000000c0001dc0                intr_exit
 *fill*         0x00000000c00022f7        0x9 
 .text          0x00000000c0002300      0x172 build/print.o
                0x00000000c0002300                put_str
                0x00000000c000231e                put_char
                0x00000000c00023eb                put_int
                0x00000000c000244e                set_cursor
 .text          0x00000000c0002472       0xf4 build/debug.o
                0x00000000c0002472                panic_spin
 .text          0x00000000c0002566      0x484 build/string.o
                0x00000000c0002566                memset
                0x00000000c00025a3                memcpy
                0x00000000c0002619                memcmp
                0x00000000c00026b2                strcpy
                0x00000000c000271d                strlen
                0x00000000c000277e                strcmp
                0x00000000c000280d                strchr
                0x00000000c000287b                strrchr
                0x00000000c00028ef                strcat
                0x00000000c000296f                strchrs
 .text          0x00000000c00029ea      0x654 build/memory.o
                0x00000000c0002a83                pte_ptr
                0x00000000c0002abd                pde_ptr
                0x00000000c0002c84                malloc_page
                0x00000000c0002d5d                get_kernel_pages
                0x00000000c0002fea                mem_init
 .text          0x00000000c000303e      0x290 build/bitmap.o
                0x00000000c000303e                bitmap_init
                0x00000000c0003071                bitmap_scan_test
                0x00000000c00030c0                bitmap_scan
                0x00000000c000320b                bitmap_set
 .text          0x00000000c00032ce      0x66b build/thread.o
                0x00000000c00032ce                running_thread
                0x00000000c0003319                thread_create
                0x00000000c000339d                init_thread
                0x00000000c0003442                thread_start
                0x00000000c00035ed                schedule
                0x00000000c0003738                thread_block
                0x00000000c00037b0                thread_unblock
                0x00000000c00038d4                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003939        0x4 build/thread.o
                0x00000000c0003939                __x86.get_pc_thunk.dx
 .text          0x00000000c000393d      0x25c build/list.o
                0x00000000c000393d                list_init
                0x00000000c0003975                list_insert_before
                0x00000000c00039c9                list_push
                0x00000000c00039f1                list_append
                0x00000000c0003a19                list_remove
                0x00000000c0003a62                list_pop
                0x00000000c0003a8e                elem_find
                0x00000000c0003ad3                list_traversal
                0x00000000c0003b3a                list_len
                0x00000000c0003b79                list_empty
 *fill*         0x00000000c0003b99        0x7 
 .text          0x00000000c0003ba0       0x15 build/switch.o
                0x00000000c0003ba0                switch_to
 .text          0x00000000c0003bb5      0x119 build/console.o
                0x00000000c0003bb5                console_init
                0x00000000c0003be0                console_acquire
                0x00000000c0003c0b                console_release
                0x00000000c0003c36                console_put_str
                0x00000000c0003c66                console_put_char
                0x00000000c0003c9e                console_put_int
 .text          0x00000000c0003cce      0x397 build/sync.o
                0x00000000c0003cce                sema_init
                0x00000000c0003d08                lock_init
                0x00000000c0003d42                sema_down
                0x00000000c0003e61                sema_up
                0x00000000c0003f2e                lock_acquire
                0x00000000c0003fb6                lock_release
 .text          0x00000000c0004065      0x33a build/keyboard.o
                0x00000000c000433d                keyboard_init
 .text          0x00000000c000439f      0x380 build/ioqueue.o
                0x00000000c000439f                ioqueue_init
                0x00000000c0004419                ioq_full
                0x00000000c0004580                ioq_getchar
                0x00000000c000464e                ioq_putchar
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x00000000c0004720      0xac8
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0004720       0x2b build/main.o
 .rodata        0x00000000c000474b        0xa build/init.o
 *fill*         0x00000000c0004755        0x3 
 .rodata        0x00000000c0004758      0x2c1 build/interrupt.o
 *fill*         0x00000000c0004a19        0x3 
 .rodata        0x00000000c0004a1c       0x6b build/timer.o
 .rodata        0x00000000c0004a87       0x38 build/debug.o
 *fill*         0x00000000c0004abf        0x1 
 .rodata        0x00000000c0004ac0       0xac build/string.o
 .rodata        0x00000000c0004b6c      0x128 build/memory.o
 .rodata        0x00000000c0004c94       0x6b build/bitmap.o
 *fill*         0x00000000c0004cff        0x1 
 .rodata        0x00000000c0004d00      0x2d3 build/thread.o
 *fill*         0x00000000c0004fd3        0x1 
 .rodata        0x00000000c0004fd4      0x135 build/sync.o
 .rodata        0x00000000c0005109       0x35 build/keyboard.o
 *fill*         0x00000000c000513e        0x2 
 .rodata        0x00000000c0005140       0xa8 build/ioqueue.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c00051e8      0xc38
 *(.eh_frame)
 .eh_frame      0x00000000c00051e8       0x8c build/main.o
 .eh_frame      0x00000000c0005274        0x0 build/main.o
 .eh_frame      0x00000000c0005274       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c0005298      0x1b4 build/interrupt.o
                                        0x1e0 (松开之前的大小)
 .eh_frame      0x00000000c000544c       0x90 build/timer.o
                                         0xd0 (松开之前的大小)
 .eh_frame      0x00000000c00054dc       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c00054f8      0x164 build/string.o
                                        0x190 (松开之前的大小)
 .eh_frame      0x00000000c000565c      0x13c build/memory.o
                                        0x17c (松开之前的大小)
 .eh_frame      0x00000000c0005798       0x94 build/bitmap.o
                                         0xc0 (松开之前的大小)
 .eh_frame      0x00000000c000582c      0x174 build/thread.o
                                        0x1b4 (松开之前的大小)
 .eh_frame      0x00000000c00059a0      0x148 build/list.o
                                        0x188 (松开之前的大小)
 .eh_frame      0x00000000c0005ae8       0xd8 build/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0005bc0       0xdc build/sync.o
                                        0x11c (松开之前的大小)
 .eh_frame      0x00000000c0005c9c       0x68 build/keyboard.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x00000000c0005d04      0x11c build/ioqueue.o
                                        0x15c (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0007000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0007000        0x0
 *(.got)
 .got           0x00000000c0007000        0x0 build/main.o
 *(.igot)
                0x00000000c0007ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0007000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0007000        0xc build/main.o
                0x00000000c0007000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)

.data           0x00000000c0007020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0007020        0x0 build/main.o
 .data          0x00000000c0007020        0x0 build/init.o
 .data          0x00000000c0007020        0x0 build/interrupt.o
 .data          0x00000000c0007020        0x0 build/timer.o
 .data          0x00000000c0007020       0xc0 build/kernel.o
                0x00000000c0007020                intr_entry_table
 .data          0x00000000c00070e0        0x8 build/print.o
 .data          0x00000000c00070e8        0x0 build/debug.o
 .data          0x00000000c00070e8        0x0 build/string.o
 .data          0x00000000c00070e8        0x0 build/memory.o
 .data          0x00000000c00070e8        0x0 build/bitmap.o
 .data          0x00000000c00070e8        0x0 build/thread.o
 .data          0x00000000c00070e8        0x0 build/list.o
 .data          0x00000000c00070e8        0x0 build/console.o
 .data          0x00000000c00070e8        0x0 build/sync.o
 *fill*         0x00000000c00070e8       0x18 
 .data          0x00000000c0007100       0x76 build/keyboard.o
 .data          0x00000000c0007176        0x0 build/ioqueue.o

.data1
 *(.data1)
                0x00000000c0007176                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000c0007176                . = .
                0x00000000c0007176                __bss_start = .

.bss            0x00000000c0007180      0x40c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0007180        0x0 build/main.o
 .bss           0x00000000c0007180        0x0 build/init.o
 .bss           0x00000000c0007180      0x180 build/interrupt.o
 .bss           0x00000000c0007300        0x0 build/timer.o
 .bss           0x00000000c0007300        0x0 build/debug.o
 .bss           0x00000000c0007300        0x0 build/string.o
 .bss           0x00000000c0007300        0x0 build/memory.o
 .bss           0x00000000c0007300        0x0 build/bitmap.o
 .bss           0x00000000c0007300        0x4 build/thread.o
 .bss           0x00000000c0007304        0x0 build/list.o
 .bss           0x00000000c0007304       0x1c build/console.o
 .bss           0x00000000c0007320        0x0 build/sync.o
 .bss           0x00000000c0007320        0x5 build/keyboard.o
 .bss           0x00000000c0007325        0x0 build/ioqueue.o
 *(COMMON)
 *fill*         0x00000000c0007325       0x1b 
 COMMON         0x00000000c0007340      0x180 build/interrupt.o
                0x00000000c0007340                intr_name
                0x00000000c0007400                idt_table
 COMMON         0x00000000c00074c0        0x4 build/timer.o
                0x00000000c00074c0                ticks
 COMMON         0x00000000c00074c4       0x2c build/memory.o
                0x00000000c00074c4                user_pool
                0x00000000c00074d4                kernel_vaddr
                0x00000000c00074e0                kernel_pool
 COMMON         0x00000000c00074f0       0x24 build/thread.o
                0x00000000c00074f0                thread_ready_list
                0x00000000c0007500                thread_all_list
                0x00000000c0007510                main_thread
 *fill*         0x00000000c0007514        0xc 
 COMMON         0x00000000c0007520       0x6c build/keyboard.o
                0x00000000c0007520                kbd_buf
                0x00000000c000758c                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c000758c                . = ALIGN (0x4)
                0x00000000c000758c                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c000758c                . = ALIGN (0x4)
                0x00000000c000758c                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000c000758c                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2d
 *(.comment)
 .comment       0x0000000000000000       0x2d build/main.o
                                         0x2e (松开之前的大小)
 .comment       0x000000000000002d       0x2e build/init.o
 .comment       0x000000000000002d       0x2e build/interrupt.o
 .comment       0x000000000000002d       0x2e build/timer.o
 .comment       0x000000000000002d       0x2e build/debug.o
 .comment       0x000000000000002d       0x2e build/string.o
 .comment       0x000000000000002d       0x2e build/memory.o
 .comment       0x000000000000002d       0x2e build/bitmap.o
 .comment       0x000000000000002d       0x2e build/thread.o
 .comment       0x000000000000002d       0x2e build/list.o
 .comment       0x000000000000002d       0x2e build/console.o
 .comment       0x000000000000002d       0x2e build/sync.o
 .comment       0x000000000000002d       0x2e build/keyboard.o
 .comment       0x000000000000002d       0x2e build/ioqueue.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
