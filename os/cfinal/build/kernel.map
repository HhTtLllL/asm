
分配公共符号
公共符号            大小              文件

kbd_buf             0x6c              build/keyboard.o
thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
user_pool           0x2c              build/memory.o
intr_name           0x204             build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
syscall_table       0x80              build/syscall-init.o
idt_table           0x204             build/interrupt.o
kernel_pool         0x2c              build/memory.o
pid_lock            0x1c              build/thread.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o
 .group         0x0000000000000000        0x8 build/console.o
 .group         0x0000000000000000        0x8 build/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/console.o
 .group         0x0000000000000000        0x8 build/sync.o
 .group         0x0000000000000000        0x8 build/sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/sync.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/keyboard.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/ioqueue.o
 .group         0x0000000000000000        0x8 build/tss.o
 .group         0x0000000000000000        0x8 build/tss.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/tss.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/tss.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/tss.o
 .group         0x0000000000000000        0x8 build/process.o
 .group         0x0000000000000000        0x8 build/process.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/process.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/process.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/process.o
 .group         0x0000000000000000        0x8 build/syscall.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/syscall.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/syscall.o
 .group         0x0000000000000000        0x8 build/syscall-init.o
 .group         0x0000000000000000        0x8 build/syscall-init.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/syscall-init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/syscall-init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/syscall-init.o
 .group         0x0000000000000000        0x8 build/stdio.o
 .group         0x0000000000000000        0x8 build/stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/stdio.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/stdio.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

节 .text 的地址设置到 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/string.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/console.o
LOAD build/sync.o
LOAD build/keyboard.o
LOAD build/ioqueue.o
LOAD build/tss.o
LOAD build/process.o
LOAD build/syscall.o
LOAD build/syscall-init.o
LOAD build/stdio.o
                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got        0x0000000008048098        0x0
 *(.plt.got)
 .plt.got       0x0000000008048098        0x0 build/main.o

.text           0x00000000c0001500     0x3edd
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x1f5 build/main.o
                0x00000000c0001500                main
                0x00000000c00015d8                k_thread_a
                0x00000000c0001653                k_thread_b
                0x00000000c000169d                u_prog_a
                0x00000000c00016c9                u_prog_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00016f5        0x4 build/main.o
                0x00000000c00016f5                __x86.get_pc_thunk.bx
 .text          0x00000000c00016f9       0x52 build/init.o
                0x00000000c00016f9                init_all
 .text          0x00000000c000174b      0x590 build/interrupt.o
                0x00000000c0001b76                intr_enable
                0x00000000c0001ba9                intr_disable
                0x00000000c0001bdc                intr_set_status
                0x00000000c0001c04                intr_get_status
                0x00000000c0001c32                register_handler
                0x00000000c0001c5b                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001cdb        0x4 build/interrupt.o
                0x00000000c0001cdb                __x86.get_pc_thunk.ax
 .text          0x00000000c0001cdf      0x1b2 build/timer.o
                0x00000000c0001e29                timer_init
 *fill*         0x00000000c0001e91        0xf 
 .text          0x00000000c0001ea0      0x55b build/kernel.o
                0x00000000c0001ea0                intr_exit
                0x00000000c00023d7                syscall_handler
 *fill*         0x00000000c00023fb        0x5 
 .text          0x00000000c0002400      0x172 build/print.o
                0x00000000c0002400                put_str
                0x00000000c000241e                put_char
                0x00000000c00024eb                put_int
                0x00000000c000254e                set_cursor
 .text          0x00000000c0002572       0xf4 build/debug.o
                0x00000000c0002572                panic_spin
 .text          0x00000000c0002666      0x484 build/string.o
                0x00000000c0002666                memset
                0x00000000c00026a3                memcpy
                0x00000000c0002719                memcmp
                0x00000000c00027b2                strcpy
                0x00000000c000281d                strlen
                0x00000000c000287e                strcmp
                0x00000000c000290d                strchr
                0x00000000c000297b                strrchr
                0x00000000c00029ef                strcat
                0x00000000c0002a6f                strchrs
 .text          0x00000000c0002aea      0x966 build/memory.o
                0x00000000c0002c1d                pte_ptr
                0x00000000c0002c57                pde_ptr
                0x00000000c0002e14                malloc_page
                0x00000000c0002eed                get_kernel_pages
                0x00000000c0002f61                get_user_pages
                0x00000000c0002fcf                get_a_page
                0x00000000c0003159                addr_v2p
                0x00000000c00033fc                mem_init
 .text          0x00000000c0003450      0x290 build/bitmap.o
                0x00000000c0003450                bitmap_init
                0x00000000c0003483                bitmap_scan_test
                0x00000000c00034d2                bitmap_scan
                0x00000000c000361d                bitmap_set
 .text          0x00000000c00036e0      0x701 build/thread.o
                0x00000000c00036e0                running_thread
                0x00000000c000377e                thread_create
                0x00000000c0003802                init_thread
                0x00000000c00038c7                thread_start
                0x00000000c0003a75                schedule
                0x00000000c0003bce                thread_block
                0x00000000c0003c46                thread_unblock
                0x00000000c0003d6a                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003de1        0x4 build/thread.o
                0x00000000c0003de1                __x86.get_pc_thunk.dx
 .text          0x00000000c0003de5      0x25c build/list.o
                0x00000000c0003de5                list_init
                0x00000000c0003e1d                list_insert_before
                0x00000000c0003e71                list_push
                0x00000000c0003e99                list_append
                0x00000000c0003ec1                list_remove
                0x00000000c0003f0a                list_pop
                0x00000000c0003f36                elem_find
                0x00000000c0003f7b                list_traversal
                0x00000000c0003fe2                list_len
                0x00000000c0004021                list_empty
 *fill*         0x00000000c0004041        0xf 
 .text          0x00000000c0004050       0x15 build/switch.o
                0x00000000c0004050                switch_to
 .text          0x00000000c0004065      0x119 build/console.o
                0x00000000c0004065                console_init
                0x00000000c0004090                console_acquire
                0x00000000c00040bb                console_release
                0x00000000c00040e6                console_put_str
                0x00000000c0004116                console_put_char
                0x00000000c000414e                console_put_int
 .text          0x00000000c000417e      0x397 build/sync.o
                0x00000000c000417e                sema_init
                0x00000000c00041b8                lock_init
                0x00000000c00041f2                sema_down
                0x00000000c0004311                sema_up
                0x00000000c00043de                lock_acquire
                0x00000000c0004466                lock_release
 .text          0x00000000c0004515      0x326 build/keyboard.o
                0x00000000c00047d9                keyboard_init
 .text          0x00000000c000483b      0x380 build/ioqueue.o
                0x00000000c000483b                ioqueue_init
                0x00000000c00048b5                ioq_full
                0x00000000c0004913                ioq_empty
                0x00000000c0004a1c                ioq_getchar
                0x00000000c0004aea                ioq_putchar
 .text          0x00000000c0004bbb      0x1b2 build/tss.o
                0x00000000c0004bbb                update_tss_esp
                0x00000000c0004c4c                tss_init
 .text          0x00000000c0004d6d      0x3da build/process.o
                0x00000000c0004d6d                start_process
                0x00000000c0004e81                page_dir_activate
                0x00000000c0004ec6                process_activate
                0x00000000c0004f29                create_page_dir
                0x00000000c0004fb2                create_user_vaddr_bitmap
                0x00000000c000500d                process_execute
 .text          0x00000000c0005147       0x48 build/syscall.o
                0x00000000c0005147                getpid
                0x00000000c0005166                write
 .text          0x00000000c000518f       0xaf build/syscall-init.o
                0x00000000c000518f                sys_write
                0x00000000c00051c2                sys_getpid
                0x00000000c00051e5                syscall_init
 .text          0x00000000c000523e      0x19f build/stdio.o
                0x00000000c00052c7                vsprintf
                0x00000000c0005374                printf
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x00000000c00053e0      0xd17
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c00053e0       0xa5 build/main.o
 .rodata        0x00000000c0005485        0xa build/init.o
 *fill*         0x00000000c000548f        0x1 
 .rodata        0x00000000c0005490      0x2c1 build/interrupt.o
 *fill*         0x00000000c0005751        0x3 
 .rodata        0x00000000c0005754       0x6b build/timer.o
 .rodata        0x00000000c00057bf       0x38 build/debug.o
 *fill*         0x00000000c00057f7        0x1 
 .rodata        0x00000000c00057f8       0xac build/string.o
 .rodata        0x00000000c00058a4      0x1cf build/memory.o
 *fill*         0x00000000c0005a73        0x1 
 .rodata        0x00000000c0005a74       0x6b build/bitmap.o
 *fill*         0x00000000c0005adf        0x1 
 .rodata        0x00000000c0005ae0      0x2db build/thread.o
 *fill*         0x00000000c0005dbb        0x1 
 .rodata        0x00000000c0005dbc      0x135 build/sync.o
 .rodata        0x00000000c0005ef1       0x35 build/keyboard.o
 *fill*         0x00000000c0005f26        0x2 
 .rodata        0x00000000c0005f28       0xa8 build/ioqueue.o
 .rodata        0x00000000c0005fd0       0x1f build/tss.o
 *fill*         0x00000000c0005fef        0x1 
 .rodata        0x00000000c0005ff0       0xe0 build/process.o
 .rodata        0x00000000c00060d0       0x27 build/syscall-init.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c00060f8      0xf5c
 *(.eh_frame)
 .eh_frame      0x00000000c00060f8       0xc4 build/main.o
 .eh_frame      0x00000000c00061bc        0x0 build/main.o
 .eh_frame      0x00000000c00061bc       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c00061e0      0x1b4 build/interrupt.o
                                        0x1e0 (松开之前的大小)
 .eh_frame      0x00000000c0006394       0x90 build/timer.o
                                         0xd0 (松开之前的大小)
 .eh_frame      0x00000000c0006424       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0006440      0x164 build/string.o
                                        0x190 (松开之前的大小)
 .eh_frame      0x00000000c00065a4      0x1a4 build/memory.o
                                        0x1e4 (松开之前的大小)
 .eh_frame      0x00000000c0006748       0x94 build/bitmap.o
                                         0xc0 (松开之前的大小)
 .eh_frame      0x00000000c00067dc      0x198 build/thread.o
                                        0x1d8 (松开之前的大小)
 .eh_frame      0x00000000c0006974      0x148 build/list.o
                                        0x188 (松开之前的大小)
 .eh_frame      0x00000000c0006abc       0xd8 build/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0006b94       0xdc build/sync.o
                                        0x11c (松开之前的大小)
 .eh_frame      0x00000000c0006c70       0x68 build/keyboard.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x00000000c0006cd8      0x11c build/ioqueue.o
                                        0x15c (松开之前的大小)
 .eh_frame      0x00000000c0006df4       0x6c build/tss.o
                                         0xac (松开之前的大小)
 .eh_frame      0x00000000c0006e60       0xd8 build/process.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0006f38       0x44 build/syscall.o
                                         0x70 (松开之前的大小)
 .eh_frame      0x00000000c0006f7c       0x6c build/syscall-init.o
                                         0xac (松开之前的大小)
 .eh_frame      0x00000000c0006fe8       0x6c build/stdio.o
                                         0xac (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0009000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0009000        0x0
 *(.got)
 .got           0x00000000c0009000        0x0 build/main.o
 *(.igot)
                0x00000000c0009ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0009000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0009000        0xc build/main.o
                0x00000000c0009000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)

.data           0x00000000c0009020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0009020        0x0 build/main.o
 .data          0x00000000c0009020        0x0 build/init.o
 .data          0x00000000c0009020        0x0 build/interrupt.o
 .data          0x00000000c0009020        0x0 build/timer.o
 .data          0x00000000c0009020       0xc0 build/kernel.o
                0x00000000c0009020                intr_entry_table
 .data          0x00000000c00090e0        0x8 build/print.o
 .data          0x00000000c00090e8        0x0 build/debug.o
 .data          0x00000000c00090e8        0x0 build/string.o
 .data          0x00000000c00090e8        0x0 build/memory.o
 .data          0x00000000c00090e8        0x0 build/bitmap.o
 .data          0x00000000c00090e8        0x0 build/thread.o
 .data          0x00000000c00090e8        0x0 build/list.o
 .data          0x00000000c00090e8        0x0 build/console.o
 .data          0x00000000c00090e8        0x0 build/sync.o
 *fill*         0x00000000c00090e8       0x18 
 .data          0x00000000c0009100       0x76 build/keyboard.o
 .data          0x00000000c0009176        0x0 build/ioqueue.o
 .data          0x00000000c0009176        0x0 build/tss.o
 .data          0x00000000c0009176        0x0 build/process.o
 .data          0x00000000c0009176        0x0 build/syscall.o
 .data          0x00000000c0009176        0x0 build/syscall-init.o
 .data          0x00000000c0009176        0x0 build/stdio.o

.data1
 *(.data1)
                0x00000000c0009176                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000c0009176                . = .
                0x00000000c0009176                __bss_start = .

.bss            0x00000000c0009180      0xae0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0009180        0x8 build/main.o
                0x00000000c0009180                prog_a_pid
                0x00000000c0009184                prog_b_pid
 .bss           0x00000000c0009188        0x0 build/init.o
 *fill*         0x00000000c0009188       0x18 
 .bss           0x00000000c00091a0      0x408 build/interrupt.o
 .bss           0x00000000c00095a8        0x0 build/timer.o
 .bss           0x00000000c00095a8        0x0 build/debug.o
 .bss           0x00000000c00095a8        0x0 build/string.o
 .bss           0x00000000c00095a8        0x0 build/memory.o
 .bss           0x00000000c00095a8        0x0 build/bitmap.o
 .bss           0x00000000c00095a8        0x6 build/thread.o
 .bss           0x00000000c00095ae        0x0 build/list.o
 *fill*         0x00000000c00095ae        0x2 
 .bss           0x00000000c00095b0       0x1c build/console.o
 .bss           0x00000000c00095cc        0x0 build/sync.o
 .bss           0x00000000c00095cc        0x5 build/keyboard.o
 .bss           0x00000000c00095d1        0x0 build/ioqueue.o
 *fill*         0x00000000c00095d1        0xf 
 .bss           0x00000000c00095e0       0x6c build/tss.o
 .bss           0x00000000c000964c        0x0 build/process.o
 .bss           0x00000000c000964c        0x0 build/syscall.o
 .bss           0x00000000c000964c        0x0 build/syscall-init.o
 .bss           0x00000000c000964c        0x0 build/stdio.o
 *(COMMON)
 *fill*         0x00000000c000964c       0x14 
 COMMON         0x00000000c0009660      0x424 build/interrupt.o
                0x00000000c0009660                intr_name
                0x00000000c0009880                idt_table
 COMMON         0x00000000c0009a84        0x4 build/timer.o
                0x00000000c0009a84                ticks
 *fill*         0x00000000c0009a88       0x18 
 COMMON         0x00000000c0009aa0       0x6c build/memory.o
                0x00000000c0009aa0                user_pool
                0x00000000c0009acc                kernel_vaddr
                0x00000000c0009ae0                kernel_pool
 COMMON         0x00000000c0009b0c       0x40 build/thread.o
                0x00000000c0009b0c                thread_ready_list
                0x00000000c0009b1c                thread_all_list
                0x00000000c0009b2c                main_thread
                0x00000000c0009b30                pid_lock
 *fill*         0x00000000c0009b4c       0x14 
 COMMON         0x00000000c0009b60       0x6c build/keyboard.o
                0x00000000c0009b60                kbd_buf
 *fill*         0x00000000c0009bcc       0x14 
 COMMON         0x00000000c0009be0       0x80 build/syscall-init.o
                0x00000000c0009be0                syscall_table
                0x00000000c0009c60                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0009c60                . = ALIGN (0x4)
                0x00000000c0009c60                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0009c60                . = ALIGN (0x4)
                0x00000000c0009c60                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000c0009c60                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2d
 *(.comment)
 .comment       0x0000000000000000       0x2d build/main.o
                                         0x2e (松开之前的大小)
 .comment       0x000000000000002d       0x2e build/init.o
 .comment       0x000000000000002d       0x2e build/interrupt.o
 .comment       0x000000000000002d       0x2e build/timer.o
 .comment       0x000000000000002d       0x2e build/debug.o
 .comment       0x000000000000002d       0x2e build/string.o
 .comment       0x000000000000002d       0x2e build/memory.o
 .comment       0x000000000000002d       0x2e build/bitmap.o
 .comment       0x000000000000002d       0x2e build/thread.o
 .comment       0x000000000000002d       0x2e build/list.o
 .comment       0x000000000000002d       0x2e build/console.o
 .comment       0x000000000000002d       0x2e build/sync.o
 .comment       0x000000000000002d       0x2e build/keyboard.o
 .comment       0x000000000000002d       0x2e build/ioqueue.o
 .comment       0x000000000000002d       0x2e build/tss.o
 .comment       0x000000000000002d       0x2e build/process.o
 .comment       0x000000000000002d       0x2e build/syscall.o
 .comment       0x000000000000002d       0x2e build/syscall-init.o
 .comment       0x000000000000002d       0x2e build/stdio.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
